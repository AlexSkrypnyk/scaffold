name: Test PHP

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'feature/**'
  workflow_dispatch:
    inputs:
      enable_terminal:
        type: boolean
        description: 'Enable terminal session.'
        required: false
        default: false

jobs:
  test-php:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.2', '8.3', '8.4', '8.5']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
          ini-values: pcov.directory=.

      - name: Install dependencies
        run: composer install ${{ matrix.php-versions == '8.5' && '--ignore-platform-reqs' || '' }}

      - name: Validate composer.json
        run: |
          composer --verbose validate
          composer normalize --dry-run

      - name: Check coding standards
        run: composer lint
        continue-on-error: ${{ vars.CI_LINT_IGNORE_FAILURE == '1' }}

      - name: Run tests
        run: composer test-coverage
        continue-on-error: ${{ vars.CI_TEST_IGNORE_FAILURE == '1' }}

      - name: Upload coverage report as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}-code-coverage-report-${{ matrix.php-versions }}
          path: .logs
          include-hidden-files: true
          if-no-files-found: error

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        if: ${{ env.CODECOV_TOKEN != '' }}
        with:
          files: .logs/junit.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ env.CODECOV_TOKEN != '' }}
        with:
          files: .logs/cobertura.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Setup tmate session
        if: ${{ !cancelled() && github.event.inputs.enable_terminal }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30

  # yamllint disable-line #;< PHP_PHAR
  build-php:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Install dependencies
        run: composer install

      - name: Build PHAR
        run: composer build

      - name: Test PHAR
        run: ./.build/php-command.phar || exit 1

      - name: Setup tmate session
        if: ${{ !cancelled() && github.event.inputs.enable_terminal }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
  # yamllint disable-line #;> PHP_PHAR
